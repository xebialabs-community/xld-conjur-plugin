import org.apache.tools.ant.filters.ReplaceTokens

plugins {
  id "com.github.hierynomus.license" version "0.14.0"
  id "com.xebialabs.xldp" version "1.0.5"
  id "nebula.release" version "6.0.0"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'

version = '1.0.1'
def apiVersion = '2017.4.0'
def artifactId = "xld-conjur-plugin"

processResources {
  filter ReplaceTokens, tokens: [
    'project.version': project.version.toString(),
    'artifactId'     : artifactId
  ]
}

repositories {
  mavenLocal()
  mavenCentral()
  maven { url 'https://dist.xebialabs.com/public/maven2' }
  maven { url 'http://repo.spring.io/libs-release/' }
}

configurations {
  provided
  compile.extendsFrom provided
}

dependencies {
  compile "com.xebialabs.deployit:udm-plugin-api:$apiVersion"
  compile "com.xebialabs.deployit:engine-spi:$apiVersion"
  compile group: 'com.google.guava', name: 'guava', version: '19.0'
  compile group: 'com.google.code.gson', name: 'gson', version: '2.3.1'
  compile group: 'org.apache.commons', name: 'commons-text', version: '1.3'
  compile group: 'edu.emory.mathcs.backport', name: 'com.springsource.edu.emory.mathcs.backport', version: '3.1.0'
  compile zipTree("$xlDeployHome/plugins/generic-plugin-8.1.0.xldp")
  compile zipTree("$xlDeployHome/plugins/base-plugin-8.1.0.xldp")

  testCompile group: 'junit', name: 'junit', version: '4.+'

  distBundle group: 'org.apache.commons', name: 'commons-text', version: '1.3'
}

if (!project.hasProperty('release.scope')) {
  project.ext['release.scope'] = 'patch'
}

if (!project.hasProperty('release.useLastTag')) {
  project.ext['release.useLastTag'] = true
}

if (!project.hasProperty('jythonInterpreter')) {
  project.ext['jythonInterpreter'] = "jython"
}

sourceSets.main.resources.srcDirs = ["src/main/java",   "src/main/resources"]
sourceSets.test.resources.srcDirs = ["src/test/jython", "src/test/resources"]

task runTest(type: Exec, dependsOn: ['testClasses']) {
    environment = ["itest_conf_file": "$projectDir/itest-conf.json", "PATH": System.getenv("PATH"), "HOME": System.getenv("HOME")]
    commandLine jythonInterpreter, "-m", "unittest", "-v", System.getProperty("testName")
    workingDir = "$projectDir/src/test/jython"
}

task itests(type: Exec, dependsOn: ['testClasses']) {
    logger.info("{$sourceSets.test.runtimeClasspath.asPath}")
    environment = ["itest_conf_file": "$projectDir/test/jython/itests/itest-conf.json", "PATH": System.getenv("PATH"), "HOME": System.getenv("HOME")]
    commandLine jythonInterpreter, "-Dpython.path={$sourceSets.test.runtimeClasspath.asPath}:{$sourceSets.main.runtimeClasspath.asPath}", "-m", "unittest", "discover", "-s", "$projectDir/src/test/jython", "-p", "*_test.py", "-v"
    workingDir = projectDir
}

license {
  header rootProject.file('License.md')
  strictCheck false
  ext.year = Calendar.getInstance().get(Calendar.YEAR)
  ext.name = 'XEBIALABS'
}
